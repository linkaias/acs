// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: recordgroupserver/record_group_server.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 新增分组请求
type RecordGroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  string `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit string `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *RecordGroupListRequest) Reset() {
	*x = RecordGroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupListRequest) ProtoMessage() {}

func (x *RecordGroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupListRequest.ProtoReflect.Descriptor instead.
func (*RecordGroupListRequest) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{0}
}

func (x *RecordGroupListRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *RecordGroupListRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

// 新增分组请求
type RecordGroupAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *RecordGroupAddRequest) Reset() {
	*x = RecordGroupAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupAddRequest) ProtoMessage() {}

func (x *RecordGroupAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupAddRequest.ProtoReflect.Descriptor instead.
func (*RecordGroupAddRequest) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{1}
}

func (x *RecordGroupAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordGroupAddRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 更新分组
type RecordGroupUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *RecordGroupUpRequest) Reset() {
	*x = RecordGroupUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupUpRequest) ProtoMessage() {}

func (x *RecordGroupUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupUpRequest.ProtoReflect.Descriptor instead.
func (*RecordGroupUpRequest) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{2}
}

func (x *RecordGroupUpRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecordGroupUpRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordGroupUpRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

// 更新分组
type RecordGroupDelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RecordGroupDelRequest) Reset() {
	*x = RecordGroupDelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupDelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupDelRequest) ProtoMessage() {}

func (x *RecordGroupDelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupDelRequest.ProtoReflect.Descriptor instead.
func (*RecordGroupDelRequest) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{3}
}

func (x *RecordGroupDelRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RecordGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *RecordGroupResponse) Reset() {
	*x = RecordGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupResponse) ProtoMessage() {}

func (x *RecordGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupResponse.ProtoReflect.Descriptor instead.
func (*RecordGroupResponse) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{4}
}

func (x *RecordGroupResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RecordGroupResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RecordGroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*RecordGroupModel `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RecordGroupListResponse) Reset() {
	*x = RecordGroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupListResponse) ProtoMessage() {}

func (x *RecordGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupListResponse.ProtoReflect.Descriptor instead.
func (*RecordGroupListResponse) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{5}
}

func (x *RecordGroupListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RecordGroupListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RecordGroupListResponse) GetData() []*RecordGroupModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecordGroupModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc      string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdateAt  string `protobuf:"bytes,5,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
}

func (x *RecordGroupModel) Reset() {
	*x = RecordGroupModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recordgroupserver_record_group_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordGroupModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordGroupModel) ProtoMessage() {}

func (x *RecordGroupModel) ProtoReflect() protoreflect.Message {
	mi := &file_recordgroupserver_record_group_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordGroupModel.ProtoReflect.Descriptor instead.
func (*RecordGroupModel) Descriptor() ([]byte, []int) {
	return file_recordgroupserver_record_group_server_proto_rawDescGZIP(), []int{6}
}

func (x *RecordGroupModel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RecordGroupModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecordGroupModel) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *RecordGroupModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RecordGroupModel) GetUpdateAt() string {
	if x != nil {
		return x.UpdateAt
	}
	return ""
}

var File_recordgroupserver_record_group_server_proto protoreflect.FileDescriptor

var file_recordgroupserver_record_group_server_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x42, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x4e, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x27, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x3b, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7a, 0x0a,
	0x17, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x32, 0xbb, 0x03, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x12, 0x2a, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recordgroupserver_record_group_server_proto_rawDescOnce sync.Once
	file_recordgroupserver_record_group_server_proto_rawDescData = file_recordgroupserver_record_group_server_proto_rawDesc
)

func file_recordgroupserver_record_group_server_proto_rawDescGZIP() []byte {
	file_recordgroupserver_record_group_server_proto_rawDescOnce.Do(func() {
		file_recordgroupserver_record_group_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_recordgroupserver_record_group_server_proto_rawDescData)
	})
	return file_recordgroupserver_record_group_server_proto_rawDescData
}

var file_recordgroupserver_record_group_server_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_recordgroupserver_record_group_server_proto_goTypes = []interface{}{
	(*RecordGroupListRequest)(nil),  // 0: record_group_server.RecordGroupListRequest
	(*RecordGroupAddRequest)(nil),   // 1: record_group_server.RecordGroupAddRequest
	(*RecordGroupUpRequest)(nil),    // 2: record_group_server.RecordGroupUpRequest
	(*RecordGroupDelRequest)(nil),   // 3: record_group_server.RecordGroupDelRequest
	(*RecordGroupResponse)(nil),     // 4: record_group_server.RecordGroupResponse
	(*RecordGroupListResponse)(nil), // 5: record_group_server.RecordGroupListResponse
	(*RecordGroupModel)(nil),        // 6: record_group_server.RecordGroupModel
}
var file_recordgroupserver_record_group_server_proto_depIdxs = []int32{
	6, // 0: record_group_server.RecordGroupListResponse.data:type_name -> record_group_server.RecordGroupModel
	0, // 1: record_group_server.RecordGroupServer.RecordGroupList:input_type -> record_group_server.RecordGroupListRequest
	2, // 2: record_group_server.RecordGroupServer.RecordGroupUpdate:input_type -> record_group_server.RecordGroupUpRequest
	1, // 3: record_group_server.RecordGroupServer.RecordGroupAdd:input_type -> record_group_server.RecordGroupAddRequest
	3, // 4: record_group_server.RecordGroupServer.RecordGroupDel:input_type -> record_group_server.RecordGroupDelRequest
	5, // 5: record_group_server.RecordGroupServer.RecordGroupList:output_type -> record_group_server.RecordGroupListResponse
	4, // 6: record_group_server.RecordGroupServer.RecordGroupUpdate:output_type -> record_group_server.RecordGroupResponse
	4, // 7: record_group_server.RecordGroupServer.RecordGroupAdd:output_type -> record_group_server.RecordGroupResponse
	4, // 8: record_group_server.RecordGroupServer.RecordGroupDel:output_type -> record_group_server.RecordGroupResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_recordgroupserver_record_group_server_proto_init() }
func file_recordgroupserver_record_group_server_proto_init() {
	if File_recordgroupserver_record_group_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recordgroupserver_record_group_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordgroupserver_record_group_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordgroupserver_record_group_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordgroupserver_record_group_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupDelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordgroupserver_record_group_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordgroupserver_record_group_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recordgroupserver_record_group_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordGroupModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recordgroupserver_record_group_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recordgroupserver_record_group_server_proto_goTypes,
		DependencyIndexes: file_recordgroupserver_record_group_server_proto_depIdxs,
		MessageInfos:      file_recordgroupserver_record_group_server_proto_msgTypes,
	}.Build()
	File_recordgroupserver_record_group_server_proto = out.File
	file_recordgroupserver_record_group_server_proto_rawDesc = nil
	file_recordgroupserver_record_group_server_proto_goTypes = nil
	file_recordgroupserver_record_group_server_proto_depIdxs = nil
}
